name: Frontend Build and Push to Artifact Registry

on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"

env:
  PROJECT_ID: alpine-anvil-244411
  REPOSITORY_NAME: combined-app
  REGION: europe-west2
  IMAGE_NAME: frontend-app

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    environment: GCP-env

    steps:
      - name: Checkout code into workspace directory
        uses: actions/checkout@v4

      - name: Authenticate Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Check if Artifact Registry Repository exists
        id: check_repo
        run: |
          if gcloud artifacts repositories describe ${{ env.REPOSITORY_NAME }} --location=${{ env.REGION }} --format="value(name)" 2>/dev/null; then
            echo "Repository exists"
            echo "repo_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Repository does not exist"
            echo "repo_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Artifact Registry Repository
        if: steps.check_repo.outputs.repo_exists == 'false'
        run: |
          gcloud artifacts repositories create ${{ env.REPOSITORY_NAME }} \
          --repository-format=docker \
          --location=${{ env.REGION }} \
          --description="Repository for combined-app"

      - name: Build Docker image
        working-directory: ./frontend
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Tag Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest
