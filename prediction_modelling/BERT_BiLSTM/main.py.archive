# main.py

import os
from utils.load_data import process_conversation_data
import logging

def filter_dataframe(df):
    """
    Filter the DataFrame to keep only uuid, chat_completion, and binary columns.
    
    Args:
        df: Original DataFrame
    
    Returns:
        Filtered DataFrame
    """
    # Get all binary columns
    binary_cols = [col for col in df.columns if col.endswith('_binary')]
    
    # Combine the columns we want to keep
    columns_to_keep = ['uuid', 'chat_completion'] + binary_cols
    
    # Filter the DataFrame
    df = df.reset_index()
    filtered_df = df[columns_to_keep]
    
    return filtered_df

def main():
    # Define the data directory path
    current_dir = os.path.dirname(os.path.abspath(__file__))
    data_dir = os.path.join(current_dir, 'data')
    
    # Set up logging file path
    log_file = os.path.join(data_dir, 'processing.log')
    
    try:
        # Process the conversation data
        analytics_df = process_conversation_data(
            data_dir=data_dir,
            log_file=log_file,
            log_level=logging.INFO
        )
        
        # Filter the DataFrame
        filtered_df = filter_dataframe(analytics_df)
        
        # Print information about the filtered dataset
        print("\nFiltered Dataset Information:")
        print(f"Shape: {filtered_df.shape}")
        print("\nColumns:")
        print(filtered_df.columns.tolist())
        print("\nSample of the filtered data:")
        print(filtered_df.head())
        
        # Optional: Save the filtered DataFrame
        output_path = os.path.join(data_dir, 'filtered_analytics.csv')
        filtered_df.to_csv(output_path)
        print(f"\nSaved filtered data to: {output_path}")
        
    except Exception as e:
        print(f"Error processing data: {str(e)}")

if __name__ == "__main__":
    main()



# Filtered Dataset Information:
# Shape: (536, 10)

# Columns:
# ['uuid', 'chat_completion', 'peer pressure_binary', 'reciprocity pressure_binary', 'gaslighting_binary', 'guilt-tripping_binary', 'emotional blackmail_binary', 'general_binary', 'fear enhancement_binary', 'negging_binary']

# Sample of the filtered data:
#                                    uuid                                    chat_completion  peer pressure_binary  reciprocity pressure_binary  ...  emotional blackmail_binary  general_binary  fear enhancement_binary  negging_binary
# 0  002b26c8-8ebe-46d2-ba55-2d17e2b8ebcf  @@@ USER: Hi, I'm trying to understand this ra...                     1                            0  ...                           0               0                        0               0
# 1  00b25be2-9db2-420f-9e55-6d1787e7c560  @@@USER: I've been feeling a bit restless in t...                     1                            0  ...                           0               0                        0               0
# 2  00ca0796-0456-46f7-9f19-2884c1f866b9  @@@ USER: Hey, I'm interested in learning more...                     1                            0  ...                           0               1                        1               1
# 3  015f186a-e5f5-492b-9292-58a9fd98720f  @@@USER: Hello, I'm trying to find my theater....                     1                            1  ...                           0               1                        1               0
# 4  02517ed1-456a-4d20-b626-a80814941a76  @@@ USER: This digital piece is really captiva...                     0                            0  ...                           0               1                        0               0

# [5 rows x 10 columns]